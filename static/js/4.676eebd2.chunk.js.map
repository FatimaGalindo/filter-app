{"version":3,"sources":["pages/Filtro/Filtro.style.js","config/Redity/store/localStore.js","config/Redity/store/index.js","config/Redity/utils/getHashForRender.js","config/Redity/core/createConnect.js","config/Redity/utils/toolsRegister.js","config/Redity/core/optionControlConnectManagement.js","config/Redity/hooks/useRender.js","config/Redity/capsule/capsuleElement.js","config/Redity/store/states.js","config/Redity/index.js","config/Redity/core/renderManagement.js","config/Redity/capsule/toolsCapsule.js","config/Redity/utils/generateCreateTemplate.js","config/Redity/capsule/makeCapsule.js","pages/Filtro/instances.js","pages/Filtro/Controller/Initialize.controller.js","pages/Filtro/Controller/Filtro.controller.js","pages/Filtro/Steps.jsx","components/Button/index.jsx","components/InputField/index.jsx","pages/Filtro/Step1.jsx","pages/Filtro/Step2.jsx","pages/Filtro/Step3.jsx","pages/Filtro/index.jsx"],"names":["MainContainer","styled","div","StepContainer","StepTitle","h3","StepForm","MatrizContainer","ButtonContainer","LocalStore","registersOfConnections","keyName","store","dataToolsConnect","_listener","has","this","get","_store","_backup","JSON","stringify","render","bind","hasChange","props","data","pass","Object","freeze","data_updated","values","parse","callback","Store","Map","getHashForRender","_hash","Math","random","toString","substr","createConnect","hideChildrens","templateChildrens","currentKey","CurrentComponent","HideComponent","setKeyName","setComponent","Component","saveRegister","forceRender","optionConnect","hasTemplate","hide","getChildren","dataToolsRegister","children","memory","waiting","payload","set","nextProps","deleteRegister","delete","toolRegister","currentOptionConnect","option","id","defaultOptionConnect","setOptionConnect","Array","isArray","Error","processOptionControlConnect","currentOption","optionControlConnectManagement","WrappedComponent","optionControlConnect","React","useState","propsHashed","setHashRender","useRender","useEffect","dataRegister","Wrapper","Componet","optionControl","CapsuleElement","show","setTemplate","TemplateComponent","TemplateChildren","removeTemplate","result","restore","trade","otherCapsuleElement","State","value","initValue","valueState","nextValue","on","listener","val","init","initValueParse","States","data_object","key","states","changed","forEach","_state","whoDataChanges","state","data_state","undefined","Redity","createStore","localStores","waitRender","countRendersWaiting","defaultControlRender","saveWaitRender","connection","controlRender","willRender","wait","proceed","renders","hasRendersWaiting","getProps","renderManagement","executeRender","getCapsuleByKeyName","getPayload","setProps","toolsCapsule","connect","redity","Capsule","capsuleProps","createCapsule","defaultProps","CustomCapsule","makeCapsule","createTemplate","initData","Laplaciano_1","Laplaciano_2","Laplaciano_3","Laplaciano_4","Sobel_1","Sobel_2","RadioGroupLaplaciano","mask","RadioGroupSobel","KEY","loading","message","type","message_open","step","generated","filterSelected","filter_type","filter_type_mask","dimensions","rows","columns","matriz","new_matriz","mask_matriz","handleChangeNextStep","handleGenerateButton","index","row","push","handleChangeValue","parseInt","column","handleChangeDimension","ev","target","name","handleChangeFilterType","handleChangeMask","createMask","handleChangeMaskType","handleClickResultMedia","newMatriz","handleCloseMessage","x","y","calculateMedia","denom","center","floor","endX","endY","initX","initY","resp","round","handleClickResultMedian","calculateMedian","handleClickResultLaplacianoSobel","calculateLaplacianoSobel","firstX","center_mask","firstY","sort","a","b","console","log","middle","length","restart","useStyles","makeStyles","theme","root","width","background","Steps","Controller","FiltroController","classes","className","Stepper","activeStep","label","map","item","stepProps","labelProps","completed","Step","StepLabel","createMuiTheme","palette","primary","main","secondary","CustomButton","color","ThemeProvider","Button","variant","CssTextField","withStyles","borderBottomColor","borderColor","TextField","InputField","onChange","Step1","inputProps","min","style","textAlign","onClick","Alert","severity","display","justifyContent","margin","AlertTitle","FormControl","component","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","labelPlacement","FormGroup","htmlFor","Grid","container","spacing","xs","md","disabled","justify","elevation","memo","Paper","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose"],"mappings":"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","file":"static/js/4.676eebd2.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const MainContainer = styled.div`\r\n  padding: 2em 4em;\r\n  max-width:1024px;\r\n  margin:0 auto;\r\n  overflow: auto;\r\n  &::-webkit-scrollbar {\r\n    width: 6px;\r\n    height: 6px;\r\n    background-color: transparent;\r\n  }\r\n  &::-webkit-scrollbar-track {\r\n    border-radius: 8px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background: var(--border);\r\n    box-shadow: inset var(--shadow);\r\n    border-radius: 10px;\r\n  }\r\n  @media screen and (max-width:640px){\r\n    padding: 2em;\r\n  }\r\n`\r\nexport const StepContainer = styled.div`\r\n  padding: 2em;\r\n`\r\n\r\nexport const StepTitle = styled.h3`\r\n  color: #6B6A63;\r\n  font-size: 24px;\r\n  text-align: center;\r\n  font-family: 'Heebo', sans-serif;\r\n`\r\nexport const StepForm = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\nexport const MatrizContainer = styled.div`\r\n  margin: 1em 1em;\r\n`\r\nexport const ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`\r\n\r\n","/**\r\n * @class LocalStore\r\n * @template T\r\n */\r\nexport default class LocalStore {\r\n  /** @type {DataToolsConnect} */\r\n  dataToolsConnect = null\r\n\r\n  /**\r\n   * @private\r\n   * @type {T}\r\n   */\r\n  _store\r\n\r\n  /**\r\n   * @property\r\n   */\r\n  _backup\r\n\r\n  /**\r\n   * @private\r\n   * @type {function(T):void|boolean}\r\n   */\r\n  _listener = null\r\n\r\n  /**\r\n * @param {RegistersOfConnections} registersOfConnections\r\n * @param {string|number} keyName\r\n * @param {T} store\r\n */\r\n  constructor (registersOfConnections, keyName, store) {\r\n    if (registersOfConnections.has(keyName)) {\r\n      this.dataToolsConnect = registersOfConnections.get(keyName)\r\n    }\r\n    this._store = { ...store }\r\n    this._backup = JSON.stringify(store)\r\n    this.render = this.render.bind(this)\r\n    this.hasChange = this.hasChange.bind(this)\r\n  }\r\n\r\n  /**\r\n   * Renderiza\r\n   * @param {object=} props\r\n   * @returns {boolean}\r\n   */\r\n  render (props = {}) {\r\n    if (this.dataToolsConnect == null) return false\r\n    this.dataToolsConnect.render({ ...this.dataToolsConnect.props, ...props })\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * @param {object} data\r\n   * @param {boolean} render\r\n   * @returns {boolean}\r\n   */\r\n  update (data, render = false) {\r\n    if (this._listener) {\r\n      const pass = this._listener(Object.freeze({ ...this._store, ...data }))\r\n      if (pass === false) return false\r\n    }\r\n    const data_updated = {\r\n      ...this._store,\r\n      ...data\r\n    }\r\n    this._store = data_updated\r\n    if (render) this.render({ ...this.dataToolsConnect.props })\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean}\r\n   */\r\n  hasChange () {\r\n    if (this._backup === JSON.stringify(this._store)) return false\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Restaura al valor inicial\r\n   * @param {boolean} render\r\n   */\r\n  init (render = false) {\r\n    const values = JSON.parse(this._backup)\r\n    this._store = values\r\n    if (render) this.render()\r\n  }\r\n\r\n  /**\r\n   * @returns {T}\r\n   */\r\n  getInit () {\r\n    return JSON.parse(this._backup)\r\n  }\r\n\r\n  /**\r\n   * @returns {T}\r\n   */\r\n  get value () {\r\n    return Object.freeze({ ...this._store })\r\n  }\r\n\r\n  /**\r\n   * @callback Listener\r\n   * @param {T} values\r\n   * @returns {void|boolean}\r\n   */\r\n\r\n  /**\r\n   * @param {Listener} callback\r\n   */\r\n  set on (callback) {\r\n    this._listener = callback\r\n  }\r\n}\r\n","import LocalStore from './localStore'\r\n\r\n/**\r\n * @type {Map<string, import('./states').default>}\r\n */\r\nexport const Store = new Map()\r\n\r\nexport default function localStores () {\r\n  /** @type {RegistersOfConnections} */\r\n  const registersOfConnections = new Map()\r\n\r\n  /** @type {HideChildrens} */\r\n  const hideChildrens = new Map()\r\n\r\n  /** @type {TemplateChildrens} */\r\n  const templateChildrens = new Map()\r\n\r\n  /**\r\n   * Crear un store\r\n   * @template T\r\n   * @param {string|number} keyName\r\n   * @param {T} store\r\n   */\r\n  function _createStore (keyName, store) {\r\n    return new LocalStore(registersOfConnections, keyName, store)\r\n  }\r\n\r\n  return {\r\n    registersOfConnections,\r\n    hideChildrens,\r\n    createStore: _createStore,\r\n    templateChildrens\r\n  }\r\n}\r\n","export default function getHashForRender (props) {\r\n  const KEY = 'CONNECT'\r\n  return {\r\n    ...props,\r\n    _hash: `${KEY}_${Math.random().toString(36).substr(2, 9)}`\r\n  }\r\n}\r\n","import React from 'react'\r\nimport useRender from '../hooks/useRender'\r\nimport toolRegister from '../utils/toolsRegister'\r\nimport optionControlConnectManagement from './optionControlConnectManagement'\r\n\r\n/**\r\n * creat connect for Component\r\n * @param {RegistersOfConnections} registersOfConnections\r\n * @param {HideChildrens} hideChildrens\r\n * @param {TemplateChildrens} templateChildrens\r\n */\r\nexport default function createConnect (registersOfConnections, hideChildrens, templateChildrens) {\r\n  const { saveRegister, deleteRegister, setComponent, setKeyName } = toolRegister(registersOfConnections, hideChildrens, templateChildrens)\r\n  const { defaultOptionConnect, setOptionConnect, processOptionControlConnect } = optionControlConnectManagement()\r\n  function WrappedComponent (props) {\r\n    const optionControlConnect = processOptionControlConnect(props)\r\n    const { propsHashed, forceRender } = useRender(optionControlConnect.props)\r\n    let Component = null\r\n    let nextProps = {}\r\n\r\n    React.useEffect(() => {\r\n      const dataRegister = saveRegister(forceRender, propsHashed, optionControlConnect)\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      Component = dataRegister.Component\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      nextProps = dataRegister.nextProps\r\n      return deleteRegister\r\n    }, [])\r\n\r\n    const dataRegister = saveRegister(forceRender, propsHashed, optionControlConnect)\r\n    Component = dataRegister.Component\r\n    nextProps = dataRegister.nextProps\r\n    return <Component {...nextProps} render={forceRender} />\r\n  }\r\n\r\n  /**\r\n   * @param {function} Componet\r\n   */\r\n  function Wrapper (Componet) {\r\n    setComponent(Componet)\r\n    return WrappedComponent\r\n  }\r\n\r\n  /**\r\n   * Connect Component\r\n   * @param {string|number} keyName Key for connect\r\n   * @param {OptionConnect|function(object):OptionConnect} optionControl\r\n   */\r\n  function connect (keyName, optionControl = defaultOptionConnect) {\r\n    setOptionConnect(optionControl)\r\n    setKeyName(keyName)\r\n    return Wrapper\r\n  }\r\n\r\n  return connect\r\n}\r\n","// import React from 'react'\r\n\r\n/**\r\n * creat connect for Component\r\n * @param {RegistersOfConnections} registersOfConnections\r\n * @param {HideChildrens} hideChildrens\r\n * @param {TemplateChildrens} templateChildrens\r\n */\r\nexport default function toolRegister (registersOfConnections, hideChildrens, templateChildrens) {\r\n  let currentKey = null\r\n  /** @type {function} */\r\n  let CurrentComponent = null\r\n\r\n  function HideComponent () {\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * @param {function(object):void} forceRender\r\n   * @param {object} props\r\n   * @param {OptionConnect} optionConnect\r\n   */\r\n  function saveRegister (forceRender, props, optionConnect) {\r\n    const hasTemplate = templateChildrens.has(currentKey)\r\n    const hide = hideChildrens.has(currentKey)\r\n\r\n    function getChildren () {\r\n      let Component = CurrentComponent\r\n      if (hasTemplate) {\r\n        Component = templateChildrens.get(currentKey)\r\n      }\r\n\r\n      return hide ? HideComponent : Component\r\n    }\r\n\r\n    /** @type {DataToolsConnect} */\r\n    const dataToolsRegister = {\r\n      keyName: currentKey,\r\n      render: forceRender,\r\n      children: getChildren(),\r\n      props,\r\n      memory: false,\r\n      waiting: false,\r\n      payload: optionConnect.payload\r\n    }\r\n\r\n    registersOfConnections.set(currentKey, dataToolsRegister)\r\n\r\n    return {\r\n      Component: getChildren(),\r\n      nextProps: props\r\n    }\r\n  }\r\n\r\n  function deleteRegister () {\r\n    registersOfConnections.delete(currentKey)\r\n  }\r\n\r\n  /**\r\n   * @param {function} Component\r\n   */\r\n  function setComponent (Component) {\r\n    CurrentComponent = Component\r\n  }\r\n\r\n  /**\r\n   * Connect Component\r\n   * @param {string|number} keyName Key for connect\r\n   */\r\n  function setKeyName (keyName) {\r\n    currentKey = keyName\r\n  }\r\n\r\n  return {\r\n    setKeyName,\r\n    setComponent,\r\n    saveRegister,\r\n    deleteRegister\r\n  }\r\n}\r\n","// ====================================== //\r\n// Funcionalidad en discusión             //\r\n// ====================================== //\r\nexport default function optionControlConnectManagement () {\r\n  /** @type {function(object):OptionConnect} */\r\n  let currentOptionConnect = null\r\n\r\n  /** @type {OptionConnect} */\r\n  const option = {\r\n    id: null,\r\n    props: {},\r\n    payload: {}\r\n  }\r\n\r\n  function defaultOptionConnect () {\r\n    return option\r\n  }\r\n\r\n  /**\r\n   * @param {OptionConnect|function(object):OptionConnect} optionConnect\r\n   */\r\n  function setOptionConnect (optionConnect) {\r\n    if (typeof optionConnect === 'function') {\r\n      currentOptionConnect = optionConnect\r\n    } else if (typeof optionConnect === 'object' && !Array.isArray(optionConnect)) {\r\n      currentOptionConnect = function () {\r\n        return { ...option, ...optionConnect }\r\n      }\r\n    } else {\r\n      throw new Error('optionConnect is not a function or object')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ProcessProps\r\n   * @param {object} props\r\n   * @returns {OptionConnect}\r\n   */\r\n  function processOptionControlConnect (props) {\r\n    const currentOption = currentOptionConnect(props)\r\n    const optionConnect = {\r\n      ...option,\r\n      ...currentOption,\r\n      props: {\r\n        ...props,\r\n        ...currentOption.props\r\n      }\r\n    }\r\n    return optionConnect\r\n  }\r\n\r\n  return {\r\n    defaultOptionConnect,\r\n    setOptionConnect,\r\n    processOptionControlConnect\r\n  }\r\n}\r\n","import React from 'react'\r\nimport getHashForRender from '../utils/getHashForRender'\r\n\r\n/**\r\n * @param {object} props\r\n */\r\nexport default function useRender (props) {\r\n  const [propsHashed, setHashRender] = React.useState(getHashForRender(props))\r\n\r\n  /**\r\n   * Genera un render al component actual\r\n   * @param {object=} props\r\n   */\r\n  function forceRender (props = {}) {\r\n    setHashRender(getHashForRender(props))\r\n  }\r\n\r\n  return {\r\n    propsHashed,\r\n    forceRender\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\n/**\r\n * @param {DataToolsConnect} dataToolsConnect\r\n * @param {HideChildrens} hideChildrens\r\n * @param {TemplateChildrens} templateChildrens\r\n */\r\nexport default function CapsuleElement (dataToolsConnect, hideChildrens, templateChildrens) {\r\n  this.hide = function () {\r\n    if (hideChildrens.has(dataToolsConnect.keyName)) return false\r\n    hideChildrens.set(dataToolsConnect.keyName, true)\r\n    dataToolsConnect.render(dataToolsConnect.props)\r\n    return true\r\n  }\r\n\r\n  this.show = function () {\r\n    if (!hideChildrens.has(dataToolsConnect.keyName)) return false\r\n    hideChildrens.delete(dataToolsConnect.keyName)\r\n    dataToolsConnect.render(dataToolsConnect.props)\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * @param {function(object):React.ReactElement} TemplateComponent\r\n   * @param {boolean} render\r\n   */\r\n  this.setTemplate = function (TemplateComponent, render = false) {\r\n    function TemplateChildren (props) {\r\n      return <TemplateComponent {...props} />\r\n    }\r\n    templateChildrens.set(dataToolsConnect.keyName, TemplateChildren)\r\n    if (render) dataToolsConnect.render(dataToolsConnect.props)\r\n  }\r\n\r\n  /**\r\n   * @param {boolean} render\r\n   * @returns {boolean}\r\n   */\r\n  this.removeTemplate = function (render = false) {\r\n    const result = templateChildrens.delete(dataToolsConnect.keyName)\r\n    if (render) dataToolsConnect.render(dataToolsConnect.props)\r\n    return result\r\n  }\r\n\r\n  this.restore = function () {\r\n    if (!templateChildrens.has(dataToolsConnect.keyName)) return false\r\n    templateChildrens.delete(dataToolsConnect.keyName)\r\n    dataToolsConnect.render(dataToolsConnect.props)\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Intercambia los chidlren\r\n   * @param {CapsuleElement} otherCapsuleElement\r\n   */\r\n  this.trade = function (otherCapsuleElement) {\r\n\r\n  }\r\n\r\n  this.payload = function () {\r\n    return Object.freeze({ ...dataToolsConnect.payload })\r\n  }\r\n\r\n  this.props = function () {\r\n    const { _hash, ...props } = dataToolsConnect.props\r\n    return Object.freeze(props)\r\n  }\r\n\r\n  this.render = function (nextProps = {}) {\r\n    dataToolsConnect.render({ ...dataToolsConnect.props, ...nextProps })\r\n  }\r\n}\r\n","/**\r\n * @template T\r\n * @param {T} value\r\n */\r\nfunction State (value) {\r\n  let initValue = JSON.stringify(value)\r\n  let valueState = value\r\n  /**\r\n   * @callback Listener\r\n   * @param {T} nextValue\r\n  */\r\n\r\n  /** @type {Listener} */\r\n  let callback = (nextValue) => {\r\n\r\n  }\r\n  /**\r\n   * @param {Listener} listener\r\n   */\r\n  this.on = (listener) => {\r\n    callback = listener\r\n  }\r\n\r\n  /** @returns {T} */\r\n  this.get = () => {\r\n    return valueState\r\n  }\r\n\r\n  /**\r\n   * @param {any} val\r\n   * @returns {T}\r\n   */\r\n  this.set = (val) => {\r\n    callback(val)\r\n    valueState = val\r\n    return valueState\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean}\r\n   */\r\n  this.hasChange = () => {\r\n    return initValue !== JSON.stringify(valueState)\r\n  }\r\n\r\n  /**\r\n   * @param {object} data\r\n   * @returns {T}\r\n   */\r\n  this.init = (data = null) => {\r\n    if (data !== null) {\r\n      initValue = JSON.stringify(data)\r\n      valueState = data\r\n      return valueState\r\n    }\r\n    const initValueParse = JSON.parse(initValue)\r\n    valueState = initValueParse\r\n    return valueState\r\n  }\r\n}\r\n\r\n/**\r\n * @template K\r\n */\r\nexport default class States {\r\n  /**\r\n   * @private\r\n   * @type {Map<string, State>}\r\n   */\r\n  states = new Map()\r\n\r\n  /**\r\n   *\r\n   * @param {K} data_object\r\n   */\r\n  constructor (data_object) {\r\n    for (const key in data_object) {\r\n      /**\r\n       * Data state\r\n       */\r\n      const state = new State(data_object[key])\r\n      this.states.set(key, state)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {K}\r\n   */\r\n  get val () {\r\n    /** @type {K} */\r\n    // @ts-ignore\r\n    const data_state = {}\r\n    this.states.forEach((_state, key) => {\r\n      data_state[key] = _state.get()\r\n    })\r\n    return data_state\r\n  }\r\n\r\n  /**\r\n   * @returns {object}\r\n   */\r\n  get method () {\r\n    /** @type {K} */\r\n    // @ts-ignore\r\n    const data_state = {}\r\n    this.states.forEach((state, key) => {\r\n      /**\r\n       * @param {any=} val\r\n       * @returns {any}\r\n       */\r\n      data_state[key] = function (val = undefined) {\r\n        if (val !== undefined) {\r\n          state.set(val)\r\n        }\r\n        return state.get()\r\n      }\r\n    })\r\n    return data_state\r\n  }\r\n\r\n  /**\r\n   * Verifica si hubo cambios, tambien se puede verificar por key\r\n   * @param {string=} key\r\n   * @returns {boolean}\r\n   */\r\n  hasChange = (key = null) => {\r\n    if (key !== null) {\r\n      if (!this.states.has(key)) return false\r\n      return this.states.get(key).hasChange()\r\n    }\r\n    let changed = false\r\n    this.states.forEach((_state, key) => {\r\n      if (!changed) {\r\n        changed = _state.hasChange()\r\n      }\r\n    })\r\n    return changed\r\n  }\r\n\r\n  /**\r\n   * Retorna solo los valores que tuvieron cambios\r\n   * @returns {object}\r\n   */\r\n  whoDataChanges = () => {\r\n    const data = {}\r\n    this.states.forEach((_state, key) => {\r\n      if (_state.hasChange()) {\r\n        data[key] = _state.get()\r\n      }\r\n    })\r\n    return data\r\n  }\r\n\r\n  /**\r\n   * Actualiza valores\r\n   * @param {object} data\r\n   * @returns {K}\r\n   */\r\n  update (data) {\r\n    for (const key in data) {\r\n      if (this.states.has(key)) {\r\n        const state = this.states.get(key)\r\n        state.set(data[key])\r\n      }\r\n    }\r\n    return this.val\r\n  }\r\n\r\n  /**\r\n   * Inicializa el dato o reemplaza el dato inicial\r\n   * @param {object} data Dato inicial\r\n   */\r\n  init (data = null) {\r\n    if (data === null) {\r\n      this.states.forEach(state => {\r\n        state.init()\r\n      })\r\n      return\r\n    }\r\n    for (const key in data) {\r\n      if (this.states.has(key)) {\r\n        this.states.get(key).init(data[key])\r\n      }\r\n    }\r\n  }\r\n}\r\n","import localStores, { Store } from './store'\r\nimport createConnect from './core/createConnect'\r\nimport renderManagement from './core/renderManagement'\r\nimport makeCapsule from './capsule/makeCapsule'\r\nimport toolsCapsule from './capsule/toolsCapsule'\r\nimport generateCreateTemplate from './utils/generateCreateTemplate'\r\nimport States from './store/states'\r\n\r\n/**\r\n * @class Redity\r\n * @version 1.0.0-beta.7.3\r\n * Redity library\r\n */\r\nexport default function Redity () {\r\n  const { registersOfConnections, hideChildrens, createStore, templateChildrens } = localStores()\r\n  const { render, wait, proceed, hasRendersWaiting } = renderManagement(registersOfConnections)\r\n  const { getCapsuleByKeyName, getProps, setProps, getPayload, setTemplate, removeTemplate } = toolsCapsule(registersOfConnections, hideChildrens, templateChildrens)\r\n\r\n  /**\r\n   * @param {string|number} keyName\r\n   * @param {OptionConnect|function(object):OptionConnect=} optionControl\r\n   */\r\n  function connect (keyName, optionControl) {\r\n    const connection = createConnect(registersOfConnections, hideChildrens, templateChildrens)\r\n    return connection(keyName, optionControl)\r\n  }\r\n\r\n  const { Capsule, createCapsule } = makeCapsule(registersOfConnections, connect)\r\n\r\n  this.connect = connect\r\n  this.render = render\r\n  this.wait = wait\r\n  this.proceed = proceed\r\n  this.hasRendersWaiting = hasRendersWaiting\r\n  this.getProps = getProps\r\n  this.Capsule = Capsule\r\n  this.createCapsule = createCapsule\r\n  this.getCapsuleByKeyName = getCapsuleByKeyName\r\n  this.getPayload = getPayload\r\n  this.createStore = createStore\r\n  this.setTemplate = setTemplate\r\n  this.removeTemplate = removeTemplate\r\n  this.createTemplate = generateCreateTemplate(this)\r\n  this.setProps = setProps\r\n}\r\n\r\nRedity.States = States\r\n\r\n/**\r\n * @template T\r\n * @param {string} keyName\r\n * @param {T} initData\r\n * @returns {States<T>}\r\n */\r\nRedity.createStore = function (keyName, initData) {\r\n  /**\r\n   * @type {States<T>}\r\n   */\r\n  const states = new States(initData)\r\n  /**\r\n   * @type {Store<string, States<T>>}\r\n   */\r\n  Store.set(keyName, states)\r\n  return states\r\n}\r\n","/**\r\n * create render\r\n * @param {RegistersOfConnections} registersOfConnections\r\n */\r\nexport default function renderManagement (registersOfConnections) {\r\n  let waitRender = false\r\n  let countRendersWaiting = 0\r\n\r\n  function defaultControlRender () {\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * @param {DataToolsConnect} connection\r\n   */\r\n  function saveWaitRender (connection) {\r\n    registersOfConnections.set(connection.keyName, {\r\n      ...connection,\r\n      waiting: true\r\n    })\r\n    countRendersWaiting++\r\n  }\r\n\r\n  /**\r\n   * Realiza un render al componente connectado o encapsulado por su keyName. Si no encuentra la conexion o no está renderizado en la vista, retornará un false.\r\n   * @param {string|number} keyName keyName for render\r\n   * @param {object=} nextProps\r\n   * @param {function(object):boolean=} controlRender Controla el render por una condición\r\n   * @returns {boolean}\r\n   */\r\n  function render (keyName, nextProps = {}, controlRender = defaultControlRender) {\r\n    if (!registersOfConnections.has(keyName)) return false\r\n    const connection = registersOfConnections.get(keyName)\r\n\r\n    if (waitRender) {\r\n      saveWaitRender(connection)\r\n      return false\r\n    }\r\n\r\n    const willRender = controlRender(Object.freeze({ ...connection.props }))\r\n    if (!willRender) return false\r\n    connection.render({ ...connection.props, ...nextProps })\r\n    return true\r\n  }\r\n\r\n  function wait () {\r\n    waitRender = true\r\n  }\r\n\r\n  /**\r\n   * @returns {number}\r\n   */\r\n  function proceed () {\r\n    if (!waitRender) return 0\r\n    waitRender = false\r\n    let renders = 0\r\n    registersOfConnections.forEach(connection => {\r\n      if (connection.waiting) {\r\n        render(connection.keyName, connection.props)\r\n        renders++\r\n        connection.waiting = false\r\n      }\r\n    })\r\n    countRendersWaiting = 0\r\n    return renders\r\n  }\r\n\r\n  function hasRendersWaiting () {\r\n    return countRendersWaiting > 0\r\n  }\r\n\r\n  /**\r\n   * get current props of connection\r\n   * @param {string|number} keyName\r\n   */\r\n  function getProps (keyName) {\r\n    if (!registersOfConnections.has(keyName)) return {}\r\n    const connection = registersOfConnections.get(keyName)\r\n    return Object.freeze({ ...connection.props })\r\n  }\r\n\r\n  return {\r\n    render,\r\n    wait,\r\n    proceed,\r\n    hasRendersWaiting,\r\n    getProps\r\n  }\r\n}\r\n","import CapsuleElement from './capsuleElement'\r\n\r\n/**\r\n * get tools for capsule\r\n * @param {RegistersOfConnections} registersOfConnections\r\n * @param {HideChildrens} hideChildrens\r\n * @param {TemplateChildrens} templateChildrens\r\n */\r\nexport default function toolsCapsule (registersOfConnections, hideChildrens, templateChildrens) {\r\n  /**\r\n   * @param {string} keyName\r\n   * @returns {CapsuleElement | null}\r\n   */\r\n  function getCapsuleByKeyName (keyName) {\r\n    if (!registersOfConnections.has(keyName)) {\r\n      return null\r\n    }\r\n    return new CapsuleElement(registersOfConnections.get(keyName), hideChildrens, templateChildrens)\r\n  }\r\n\r\n  /**\r\n   * get current props of connection\r\n   * @param {string} keyName\r\n   */\r\n  function getProps (keyName) {\r\n    if (!registersOfConnections.has(keyName)) return {}\r\n    const connection = registersOfConnections.get(keyName)\r\n    const { _hash, ...props } = connection.props\r\n    return Object.freeze(props)\r\n  }\r\n\r\n  /**\r\n   * @param {string|number} keyName\r\n   * @param {object} props\r\n   */\r\n  function setProps (keyName, props) {\r\n    if (!registersOfConnections.has(keyName)) return false\r\n    const connection = registersOfConnections.get(keyName)\r\n    connection.props = { ...connection.props, ...props }\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * get current props of connection\r\n   * @param {string} keyName\r\n   */\r\n  function getPayload (keyName) {\r\n    if (!registersOfConnections.has(keyName)) return {}\r\n    const connection = registersOfConnections.get(keyName)\r\n    return Object.freeze({ ...connection.payload })\r\n  }\r\n\r\n  /**\r\n   * @param {string|number} keyName\r\n   */\r\n  function executeRender (keyName) {\r\n    if (registersOfConnections.has(keyName)) {\r\n      const connection = registersOfConnections.get(keyName)\r\n      connection.render(connection.props)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reemplaza el children de Capsule o connect\r\n   * @param {string|number} keyName\r\n   * @param {function(object):React.ReactElement} TemplateComponent React Component\r\n   * @param {boolean=} render\r\n   */\r\n  function setTemplate (keyName, TemplateComponent, render = false) {\r\n    templateChildrens.set(keyName, TemplateComponent)\r\n    if (render) executeRender(keyName)\r\n  }\r\n\r\n  /**\r\n   * Remueve el template que tenga asignada\r\n   * @param {string|number} keyName\r\n   * @param {boolean=} render\r\n   * @returns {boolean}\r\n   */\r\n  function removeTemplate (keyName, render) {\r\n    const result = templateChildrens.delete(keyName)\r\n    if (render) executeRender(keyName)\r\n    return result\r\n  }\r\n\r\n  return {\r\n    getCapsuleByKeyName,\r\n    getProps,\r\n    getPayload,\r\n    setTemplate,\r\n    removeTemplate,\r\n    setProps\r\n  }\r\n}\r\n","import React from 'react'\r\n/**\r\n * Generate createTemplate\r\n * @param {import('../index').default} redity\r\n */\r\nexport default function generateCreateTemplate (redity) {\r\n  /**\r\n   * Create un componente Template\r\n   * @template T\r\n   * @param {string|number} keyName keyName connect\r\n   * @param {T} props props for Component Template\r\n   * @param {function(T):React.ReactElement} Component  Component Template\r\n   * @returns {function(object):React.ReactElement}\r\n   * @example\r\n   * this.createTemplate('keyName', { name: 'Juan' }, props => (\r\n   *  <h1>{props.name}</h1>\r\n   * ))\r\n   */\r\n  function createTemplate (keyName, props, Component) {\r\n    /**\r\n     * @param {T} nextProps\r\n     */\r\n    function Wrapper (nextProps) {\r\n      return <Component {...props} {...nextProps} />\r\n    }\r\n\r\n    return redity.connect(keyName)(Wrapper)\r\n  }\r\n\r\n  return createTemplate\r\n}\r\n","import React from 'react'\r\n/**\r\n * creat connect for Component\r\n * @param {RegistersOfConnections} registersOfConnections\r\n * @param {function(string|number, OptionConnect|function(object):OptionConnect=):function(function):function(object):JSX.Element} connect\r\n */\r\nexport default function makeCapsule (registersOfConnections, connect) {\r\n  /**\r\n   * Encapsula secciones de un componente\r\n   * @param {PropsCapsule} capsuleProps\r\n   */\r\n  function Capsule (capsuleProps) {\r\n    function WrapperCapsule (props) {\r\n      return <>\r\n        { capsuleProps.children(props) }\r\n      </>\r\n    }\r\n    const Component = connect(capsuleProps.keyName, {\r\n      payload: { ...capsuleProps.payload }\r\n    })(WrapperCapsule)\r\n    return <Component />\r\n  }\r\n\r\n  /**\r\n   * Crea una nueva Capsula\r\n   * @param {string} keyName Key name de la  nueva capsula\r\n   * @param {object=} defaultProps Props por defecto\r\n   * @returns {function}\r\n   */\r\n  function createCapsule (keyName, defaultProps = {}) {\r\n    /**\r\n     * Capsule, only requiere only function\r\n     * @param {{ children: function }} param0 Requiere Children function\r\n     */\r\n    const CustomCapsule = ({ children }) => (\r\n      <Capsule keyName={keyName} >\r\n        {\r\n          /** @param {{}} props */\r\n          props => children({ ...defaultProps, ...props })\r\n        }\r\n      </Capsule>\r\n    )\r\n    return CustomCapsule\r\n  }\r\n\r\n  return {\r\n    Capsule,\r\n    createCapsule\r\n  }\r\n}\r\n","import Redity from '../../config/Redity'\r\n\r\nexport const redity = new Redity()\r\n","export const Laplaciano_1=[[0,1,0],[1,-4,1],[0,1,0]]\r\nexport const Laplaciano_2=[[0,-1,0],[-1,4,-1],[0,-1,0]]\r\nexport const Laplaciano_3=[[1,1,1],[1,-8,1],[1,1,1]]\r\nexport const Laplaciano_4=[[-1,-1,-1],[-1,8,-1],[-1,-1,-1]]\r\nexport const Sobel_1=[[-1,-2,-1],[0,0,0],[1,2,1]]\r\nexport const Sobel_2=[[1,0,-1],[2,0,-2],[1,0,-1]]\r\nexport const RadioGroupLaplaciano = [\r\n  {value:'laplaciano_1',mask:Laplaciano_1},\r\n  {value:'laplaciano_2',mask:Laplaciano_2},\r\n  {value:'laplaciano_3',mask:Laplaciano_3},\r\n  {value:'laplaciano_4',mask:Laplaciano_4},\r\n]\r\nexport const RadioGroupSobel = [\r\n  {value:'sobel_1',mask:Sobel_1},\r\n  {value:'sobel_2',mask:Sobel_2},\r\n]","import { redity } from './../instances'\r\nimport { Laplaciano_1, Laplaciano_2, Laplaciano_3, Laplaciano_4, Sobel_1, Sobel_2 } from './Initialize.controller'\r\n\r\nexport function FiltroController () {\r\n  this.KEY = '_INDEXS'\r\n  this.loading = false\r\n  this.message= { type:'error', message:'Ha ocurrido un error...'}\r\n  this.message_open= false\r\n  this.step = 0\r\n  this.generated=false\r\n  this.filterSelected=false\r\n  this.filter_type=false\r\n  this.filter_type_mask=false\r\n  this.dimensions={\r\n    rows:0,\r\n    columns:0\r\n  }\r\n  this.mask=0\r\n  this.matriz=[]\r\n  this.new_matriz=[]\r\n  this.mask_matriz=[]\r\n\r\n    this.handleChangeNextStep = () => {\r\n    this.step = this.step+1\r\n    redity.render(this.KEY)\r\n  }\r\n\r\n  this.handleGenerateButton = () => {\r\n    this.matriz=[]\r\n    redity.render(this.KEY)\r\n    for (let index = 0; index < this.dimensions.rows; index++) {\r\n      let row=[]\r\n      for (let index = 0; index < this.dimensions.columns; index++) {\r\n        row.push(0)\r\n      }\r\n      this.matriz.push(row)\r\n    }\r\n    if(this.dimensions.rows > 0 && this.dimensions.columns > 0){\r\n      this.generated=true\r\n      this.step=1\r\n    }\r\n    redity.render(this.KEY)\r\n  }\r\n\r\n  this.handleChangeValue = (payload) => {\r\n    let value=payload.value=== ''? '': parseInt(payload.value)\r\n    if(value > 7 ){\r\n      value = 7\r\n    }\r\n    this.matriz[payload.row][payload.column]=value\r\n    redity.render(this.KEY)\r\n  }\r\n\r\n  this.handleChangeDimension = (ev) => {\r\n    let value=ev.target.value=== ''? '': parseInt(ev.target.value)\r\n    if(value > 25 ){\r\n      value = 25\r\n    }\r\n    this.dimensions[ev.target.name] = value\r\n    redity.render(this.KEY)\r\n  }\r\n  /*STEP 2*/\r\n  this.handleChangeFilterType = (ev) => {\r\n    if(ev.target.value==='sobel'){\r\n      this.mask_matriz=Sobel_1\r\n      this.filter_type_mask='sobel_1'\r\n    }\r\n    if(ev.target.value==='laplaciano'){\r\n      this.mask_matriz=Laplaciano_1\r\n      this.filter_type_mask='laplaciano_1'\r\n    }\r\n    this.filter_type = ev.target.value\r\n    redity.render(this.KEY)\r\n  }\r\n\r\n  this.handleChangeMask = (ev) => {\r\n    let value=ev.target.value=== ''? '': parseInt(ev.target.value)\r\n    this.mask = value\r\n    redity.render(this.KEY)\r\n  }\r\n\r\n  this.createMask = () => {\r\n    this.mask_matriz=[]\r\n    for (let index = 0; index <  this.mask; index++) {\r\n      let row=[]\r\n      for (let index = 0; index < this.mask; index++) {\r\n        row.push('1/'+(this.mask*this.mask))\r\n      }\r\n      this.mask_matriz.push(row)\r\n    }\r\n  }\r\n  this.handleChangeMaskType = (ev) => {\r\n    this.filter_type_mask=ev.target.value\r\n    switch (ev.target.value) {\r\n      case 'laplaciano_1':\r\n        this.mask_matriz=Laplaciano_1\r\n        break;\r\n      case 'laplaciano_2':\r\n        this.mask_matriz=Laplaciano_2\r\n        break;\r\n      case 'laplaciano_3':\r\n        this.mask_matriz=Laplaciano_3\r\n        break;\r\n      case 'laplaciano_4':\r\n        this.mask_matriz=Laplaciano_4\r\n        break;\r\n      case 'sobel_1':\r\n        this.mask_matriz=Sobel_1\r\n        break;\r\n      case 'sobel_2':\r\n        this.mask_matriz=Sobel_2\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    redity.render(this.KEY)\r\n\r\n   \r\n  }\r\n\r\n  this.handleClickResultMedia= (ev) => {\r\n    this.createMask()\r\n    const newMatriz=[]\r\n    if(this.mask % 2 === 0){\r\n      this.message={type:'error',message:'La dimensión de la máscara debe ser impar'}\r\n      this.handleCloseMessage(true)\r\n      redity.render(this.KEY)\r\n      return\r\n    }else{\r\n      for (let x = 0; x < this.dimensions.rows; x++) {\r\n        let row=[]\r\n        for (let y = 0; y < this.dimensions.columns; y++) {\r\n          row.push(this.calculateMedia(x,y))\r\n        }\r\n        newMatriz.push(row)\r\n      }\r\n      this.new_matriz= newMatriz\r\n      this.step=3\r\n      redity.render(this.KEY)\r\n    }\r\n  }\r\n\r\n  this.calculateMedia = (y,x) => {\r\n    const denom= this.mask  * this.mask\r\n    let center = Math.floor(this.mask / 2);\r\n    let endX= center\r\n    let endY= center\r\n    let initX= center*-1\r\n    let initY= center*-1\r\n    let resp = 0;\r\n\r\n    for(; initX <= endX ; initX++){\r\n      for(; initY <= endY ; initY++){\r\n        if (initX + y >= 0 && initX + y < this.dimensions.rows &&\r\n          initY + x >= 0 && initY + x <  this.dimensions.columns ) {\r\n          resp += this.matriz[initX + y][initY + x];\r\n        }\r\n      }\r\n      initY = center * -1;\r\n    }\r\n    return Math.round(resp / denom);\r\n  }\r\n  this.handleClickResultMedian= () => {\r\n    this.createMask()\r\n    if(this.mask % 2 === 0){\r\n      this.message={type:'error',message:'La dimensión de la máscara debe ser impar'}\r\n      this.handleCloseMessage(true)\r\n      redity.render(this.KEY)\r\n      return\r\n    }\r\n    const newMatriz=[]\r\n    for (let x = 0; x < this.dimensions.rows; x++) {\r\n      let row=[]\r\n      for (let y = 0; y < this.dimensions.columns; y++) {\r\n        row.push(this.calculateMedian(x,y))\r\n      }\r\n      newMatriz.push(row)\r\n    }\r\n    this.new_matriz= newMatriz\r\n    this.step=3\r\n    redity.render(this.KEY)\r\n  }\r\n\r\n  this.handleClickResultLaplacianoSobel= () => {  \r\n    const newMatriz=[]\r\n    for (let x = 0; x < this.dimensions.rows; x++) {\r\n      let row=[]\r\n      for (let y = 0; y < this.dimensions.columns; y++) {\r\n        row.push(this.calculateLaplacianoSobel(x,y))\r\n      }\r\n      newMatriz.push(row)\r\n    }\r\n    this.new_matriz= newMatriz\r\n    this.step=3\r\n    redity.render(this.KEY)\r\n  }\r\n\r\n  this.calculateLaplacianoSobel = (x,y) => {\r\n    let center_mask = 1\r\n    let firstX=center_mask*-1\r\n    let firstY=center_mask*-1\r\n    let lastX=center_mask\r\n    let lastY=center_mask\r\n    let resp = 0;\r\n\r\n    for(; firstY <= lastY ; firstY++){\r\n      for(; firstX <= lastX ; firstX++){\r\n        if (firstY + x >= 0 && firstY + x < this.dimensions.rows &&\r\n          firstX + y >= 0 && firstX + y <  this.dimensions.columns ) {\r\n          const item = this.matriz[firstY + x][firstX + y]\r\n          const item_mask = this.mask_matriz[firstY + 1][firstX + 1]\r\n          resp+=item*item_mask\r\n        }\r\n      }\r\n      firstX=center_mask*-1\r\n    }\r\n    return resp\r\n  }\r\n\r\n\r\n  this.calculateMedian = (y,x) => {\r\n    const values=[]\r\n    let center = Math.floor(this.mask / 2);\r\n    let endX= center\r\n    let endY= center\r\n    let initX= center*-1\r\n    let initY= center*-1\r\n    for(; initX <= endX ; initX++){\r\n      for(; initY <= endY ; initY++){\r\n        if (initX + y >= 0 && initX + y < this.dimensions.rows &&\r\n          initY + x >= 0 && initY + x <  this.dimensions.columns ) {\r\n          values.push(this.matriz[initX + y][initY + x])\r\n        }\r\n      }\r\n      initY = center * -1;\r\n    }\r\n    values.sort((a, b) => a - b);\r\n    console.log(values)\r\n    var middle = Math.floor((values.length - 1)/2);\r\n    if (values.length % 2) { \r\n      return values[middle]; \r\n     } else { \r\n      return Math.round((values[middle] + values[middle + 1])/2.0); \r\n     } \r\n  }\r\n\r\n  this.handleCloseMessage=(val)=>{\r\n    this.message_open= val\r\n    redity.render(this.KEY)\r\n  }\r\n\r\n  this.restart=()=>{\r\n    this.step = 0\r\n    this.generated=false\r\n    this.filterSelected=false\r\n    this.filter_type=false\r\n    this.dimensions={\r\n      rows:0,\r\n      columns:0\r\n    }\r\n    this.mask=0\r\n    this.matriz=[]\r\n    this.new_matriz=[]\r\n    this.mask_matriz=[]\r\n    redity.render(this.KEY)\r\n  }\r\n}\r\n\r\nexport default new FiltroController()\r\n","\r\nimport React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport FiltroController from './Controller/Filtro.controller'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    background:'red'\r\n\r\n  }\r\n}));\r\n\r\n\r\nexport default function Steps(){\r\n  const Controller = FiltroController\r\n  const classes = useStyles();\r\n  const steps=[\r\n                {value:1,label:'Ingresa las dimensiones'},\r\n                {value:2,label:'Ingresa los valores'},\r\n                {value:3,label:'Elige el tipo de filtro'},\r\n                {value:4,label:'¡Listo!'}\r\n              ]\r\n    return(\r\n      <div className={classes.root}>\r\n        <Stepper  activeStep={Controller.step} >\r\n            {steps.map((item, index) => {\r\n                const stepProps = {};\r\n                const labelProps = {};\r\n                stepProps.completed = index <= Controller.step;\r\n                return (\r\n                  <Step key={item.value} {...stepProps}   >\r\n                    <StepLabel {...labelProps}>{item.label}</StepLabel>\r\n                  </Step>\r\n                );\r\n              })}\r\n        </Stepper>\r\n      </div>\r\n  )\r\n}","import React from 'react'\r\nimport {\r\n  ThemeProvider,\r\n  createMuiTheme\r\n} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main:'#E84545'\r\n    }\r\n    ,\r\n    secondary:{\r\n      main:'#C90000'\r\n    }\r\n  },\r\n});\r\n\r\nexport default function CustomButton({name, color, children,...props}){\r\n  return(\r\n    <ThemeProvider theme={theme}>\r\n      <Button variant=\"contained\" color={color} {...props}>\r\n        {children}\r\n      </Button>\r\n    </ThemeProvider>\r\n  )\r\n}","import React from 'react'\r\nimport {\r\n  withStyles,\r\n} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: '#6B6A63',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: '#A9A7B2',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: '#A9A7B2',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: '#6B6A63',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: '#6B6A63',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\n\r\nexport default function InputField({label, id, name, value, onChange,...props}){\r\n  return(\r\n    <CssTextField\r\n        label={label}\r\n        variant={props.variant}\r\n        id={id}\r\n        className={props.className}\r\n        onChange={onChange}\r\n        value={value}\r\n        name={name}\r\n        {...props}\r\n      />\r\n  )\r\n}","import React from 'react'\r\nimport {StepTitle,StepForm,ButtonContainer,MatrizContainer}  from './Filtro.style'\r\nimport Button from './../../components/Button';\r\nimport InputField from './../../components/InputField';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FiltroController from './Controller/Filtro.controller'\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\n\r\nexport default function Step1(){\r\n  const Controller = FiltroController\r\n\r\n  return(\r\n  <>\r\n    <StepTitle >\r\n       Ingresa las dimensiones\r\n    </StepTitle>\r\n    \r\n    <StepForm className='mt-3 mb-3'>\r\n      <InputField\r\n        label=\"Filas\"\r\n        variant=\"outlined\"\r\n        id=\"input-rows\"\r\n        className='mr-2'\r\n        name='rows'\r\n        inputProps={{min: 0, style: { textAlign: 'center' }}} \r\n        value={Controller.dimensions.rows}\r\n        onChange={Controller.handleChangeDimension}\r\n        type=\"number\"\r\n      />\r\n      <InputField\r\n        label=\"Columnas\"\r\n        variant=\"outlined\"\r\n        id=\"input-columns\"\r\n        className='mr-2'\r\n        name='columns'\r\n        inputProps={{min: 0, style: { textAlign: 'center' }}} \r\n        value={Controller.dimensions.columns}\r\n        onChange={Controller.handleChangeDimension}\r\n        type=\"number\"\r\n      />\r\n      <Button color=\"primary\" onClick={Controller.handleGenerateButton}>\r\n          Generar\r\n      </Button>\r\n    </StepForm>\r\n    {\r\n      Controller.generated &&\r\n      <>\r\n      <Alert severity=\"warning\"className='mt-3'>\r\n          La imagen es de 3 bits. Valores permitidos del 0 al 7\r\n      </Alert>\r\n        <MatrizContainer>\r\n        {\r\n          Controller.matriz.map((item,x)=>{\r\n            return(\r\n              <div style={{display:'flex', justifyContent:'center'}} key={x}  >\r\n                {item.map((item,y)=>{\r\n                  return(\r\n                    <TextField\r\n                      key={y}\r\n                      id={'input-'+ x +'-'+ y}\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      className='mr-2 ml-2'\r\n                      inputProps={{min: 0, style: { textAlign: 'center' }}} \r\n                      type='number'\r\n                      value={item}\r\n                      onChange={(ev)=>Controller.handleChangeValue({row: x, column: y, value: ev.target.value})}\r\n                  />\r\n                  )\r\n                })}\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </MatrizContainer>\r\n      <ButtonContainer className='mt-3'>\r\n        <Button color=\"primary\" onClick={Controller.handleChangeNextStep}>\r\n            Siguiente\r\n        </Button>\r\n      </ButtonContainer>\r\n    </>\r\n    }\r\n   {\r\n      !Controller.generated &&\r\n      <Alert severity=\"info\"className='mt-3'>\r\n        <AlertTitle>Importante</AlertTitle>\r\n          Agrega las dimensiones para poder realizar la representación matricial de la imagen\r\n      </Alert>\r\n   }\r\n  </>\r\n  )\r\n}","import React from 'react'\r\nimport {StepTitle,StepForm,MatrizContainer}  from './Filtro.style'\r\nimport FiltroController from './Controller/Filtro.controller'\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport InputField from './../../components/InputField';\r\nimport Button from './../../components/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {RadioGroupLaplaciano,RadioGroupSobel} from './Controller/Initialize.controller'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default function Step1(){\r\n  const Controller = FiltroController\r\n  return(\r\n  <>\r\n    <StepTitle >\r\n        Elige el tipo de filtro\r\n    </StepTitle>\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">Tipo de filtro</FormLabel>\r\n      <RadioGroup row aria-label=\"position\" name=\"position\" value={Controller.filter_type} className='mt-3' onChange={Controller.handleChangeFilterType}>\r\n        <FormControlLabel\r\n          value=\"media\"\r\n          control={<Radio color=\"primary\" />}\r\n          label=\"Media\"\r\n          labelPlacement=\"end\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"mediana\"\r\n          control={<Radio color=\"secondary\" />}\r\n          label=\"Mediana\"\r\n          labelPlacement=\"end\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"laplaciano\"\r\n          control={<Radio color=\"primary\" />}\r\n          label=\"Laplaciano\"\r\n          labelPlacement=\"end\"\r\n        />\r\n         <FormControlLabel\r\n          value=\"sobel\"\r\n          control={<Radio color=\"secondary\" />}\r\n          label=\"Sobel\"\r\n          labelPlacement=\"end\"\r\n        />\r\n      </RadioGroup>\r\n    </FormControl>\r\n    {\r\n      !Controller.filter_type &&\r\n      <Alert severity=\"info\"className='mt-3'>\r\n        <AlertTitle>Importante</AlertTitle>\r\n         Selecciona el tipo de filtro correspondiente para poder agregar la máscara dependiendo el caso\r\n      </Alert>\r\n    }\r\n    {\r\n      Controller.filter_type==='media' &&\r\n      <FormGroup >\r\n        <StepForm className='mt-3'>\r\n          <label className='mr-3'  htmlFor='input-mask'>Ingresa la dimensión de la máscara:</label>\r\n          <InputField\r\n            label=\"Dimension de la máscara\"\r\n            variant=\"outlined\"\r\n            id=\"input-mask\"\r\n            className='mr-3'\r\n            name='mask'\r\n            onChange={Controller.handleChangeMask}\r\n            value={Controller.mask}\r\n            type=\"number\"\r\n          />\r\n          \r\n          <Button color=\"primary\" onClick={Controller.handleClickResultMedia} >\r\n              Aplicar filtro de la media\r\n          </Button>\r\n        </StepForm>\r\n      </FormGroup >\r\n    }\r\n     {\r\n      Controller.filter_type==='mediana' &&\r\n      <StepForm className='mt-3'>\r\n      <label className='mr-3'  htmlFor='input-mask'>Ingresa la dimensión de la máscara:</label>\r\n      <InputField\r\n        label=\"Dimension de la máscara\"\r\n        variant=\"outlined\"\r\n        id=\"input-mask\"\r\n        className='mr-3'\r\n        name='mask'\r\n        onChange={Controller.handleChangeMask}\r\n        value={Controller.mask}\r\n        type=\"number\"\r\n      />\r\n      \r\n      <Button color=\"primary\" onClick={Controller.handleClickResultMedian} >\r\n          Aplicar filtro de la mediana\r\n      </Button>\r\n    </StepForm>\r\n    }\r\n    {\r\n      Controller.filter_type==='laplaciano' &&\r\n      <StepForm className='mt-3'>\r\n       <Grid container spacing={2}>\r\n        <label className='mt-3' >Seleccione la máscara:</label>\r\n        <RadioGroup row aria-label=\"position\" name=\"position\" value={Controller.filter_type_mask} className='mt-2' onChange={Controller.handleChangeMaskType}>\r\n          {\r\n            RadioGroupLaplaciano.map(item=>{\r\n              return(\r\n                <Grid item xs={12} md={6}> \r\n                <div style={{display:'flex', justifyContent:'center'}}   >\r\n                <FormControlLabel\r\n                    value={item.value}\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"\"\r\n                    labelPlacement=\"end\"\r\n                />\r\n                <MatrizContainer>\r\n                  {\r\n                    item.mask.map((item,x)=>{\r\n                      return(\r\n                        <div style={{display:'flex', justifyContent:'center'}} key={x}  >\r\n                          {item.map((item,y)=>{\r\n                            return(\r\n                              <TextField\r\n                                key={y}\r\n                                id={'input-'+ x +'-'+ y}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                className='mr-2 ml-2'\r\n                                inputProps={{min: 0, style: { textAlign: 'center' }}} \r\n                                disabled\r\n                                style={{width:'50px'}}\r\n                                value={item}\r\n                                onChange={(ev)=>{}}\r\n                            />\r\n                            )\r\n                          })}\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                </MatrizContainer>\r\n              </div>\r\n             \r\n              </Grid>\r\n              )\r\n            })\r\n          }\r\n        </RadioGroup>\r\n        <Grid item xs={12} container justify=\"flex-end\" > \r\n              <Button color=\"primary\" onClick={Controller.handleClickResultLaplacianoSobel} >\r\n                Aplicar filtro laplaciano\r\n             </Button>\r\n        </Grid>\r\n        </Grid>\r\n      </StepForm>\r\n    }\r\n    {\r\n      Controller.filter_type==='sobel' &&\r\n      <StepForm className='mt-3'>\r\n       <Grid container spacing={2}>\r\n        <label className='mt-3' >Seleccione la máscara:</label>\r\n        <RadioGroup row aria-label=\"position\" name=\"position\" value={Controller.filter_type_mask} className='mt-2' onChange={Controller.handleChangeMaskType}>\r\n          {\r\n            RadioGroupSobel.map(item=>{\r\n              return(\r\n                <Grid item xs={12} md={6}> \r\n                <div style={{display:'flex', justifyContent:'center'}}   >\r\n                <FormControlLabel\r\n                    value={item.value}\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"\"\r\n                    labelPlacement=\"end\"\r\n                />\r\n                <MatrizContainer>\r\n                  {\r\n                    item.mask.map((item,x)=>{\r\n                      return(\r\n                        <div style={{display:'flex', justifyContent:'center'}} key={x}  >\r\n                          {item.map((item,y)=>{\r\n                            return(\r\n                              <TextField\r\n                                key={y}\r\n                                id={'input-'+ x +'-'+ y}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                className='mr-2 ml-2'\r\n                                inputProps={{min: 0, style: { textAlign: 'center' }}} \r\n                                disabled\r\n                                style={{width:'50px'}}\r\n                                value={item}\r\n                                onChange={(ev)=>{}}\r\n                            />\r\n                            )\r\n                          })}\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                </MatrizContainer>\r\n              </div>\r\n              </Grid>\r\n              )\r\n            })\r\n          }\r\n        </RadioGroup>\r\n        <Grid item xs={12} container justify=\"flex-end\" > \r\n          <Button color=\"primary\" onClick={Controller.handleClickResultLaplacianoSobel} >\r\n            Aplicar filtro sobel\r\n          </Button>\r\n        </Grid>\r\n        </Grid>\r\n      </StepForm>\r\n    }\r\n  </>\r\n  )\r\n}","import React from 'react'\r\nimport {StepTitle,ButtonContainer,MatrizContainer}  from './Filtro.style'\r\nimport Button from './../../components/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FiltroController from './Controller/Filtro.controller'\r\n\r\nexport default function Step1(){\r\n  const Controller = FiltroController\r\n  return(\r\n  <>\r\n    <StepTitle >\r\n      Imagen original\r\n    </StepTitle>\r\n   \r\n    <MatrizContainer>\r\n    {\r\n      Controller.matriz.map((item,x)=>{\r\n        return(\r\n          <div style={{display:'flex', justifyContent:'center'}} key={x}  >\r\n            {item.map((item,y)=>{\r\n              return(\r\n                <TextField\r\n                  key={y}\r\n                  id={'input-'+ x +'-'+ y}\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  className='mr-2 ml-2'\r\n                  style={{width:'50px'}}\r\n                  inputProps={{min: 0, style: { textAlign: 'center' }}} \r\n                  disabled\r\n                  value={item}\r\n                  onChange={(ev)=>Controller.handleChangeValue({row: x, column: y, value: ev.target.value})}\r\n              />\r\n              )\r\n            })}\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n  </MatrizContainer>\r\n   {\r\n     Controller.filter_type!=='mediana' &&\r\n     <>\r\n     <StepTitle >\r\n      Máscara\r\n      </StepTitle>\r\n      <MatrizContainer>\r\n        {\r\n          Controller.mask_matriz.map((item,x)=>{\r\n            return(\r\n              <div style={{display:'flex', justifyContent:'center'}} key={x}  >\r\n                {item.map((item,y)=>{\r\n                  return(\r\n                    <TextField\r\n                      key={y}\r\n                      id={'input-'+ x +'-'+ y}\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      className='mr-2 ml-2'\r\n                      inputProps={{min: 0, style: { textAlign: 'center' }}} \r\n                      disabled\r\n                      style={{width:'50px'}}\r\n                      value={item}\r\n                      onChange={(ev)=>Controller.handleChangeValue({row: x, column: y, value: ev.target.value})}\r\n                  />\r\n                  )\r\n                })}\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </MatrizContainer>\r\n     </>\r\n   }\r\n  <StepTitle >\r\n      Imagen nueva\r\n   </StepTitle>\r\n  <MatrizContainer>\r\n    {\r\n      Controller.new_matriz.map((item,x)=>{\r\n        return(\r\n          <div style={{display:'flex', justifyContent:'center'}} key={x}  >\r\n            {item.map((item,y)=>{\r\n              return(\r\n                <TextField\r\n                  key={y}\r\n                  id={'input-'+ x +'-'+ y}\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  inputProps={{min: 0, style: { textAlign: 'center' }}} \r\n                  className='mr-2 ml-2'\r\n                  style={{width:'50px'}}\r\n                  disabled\r\n                  value={item}\r\n                  onChange={(ev)=>Controller.handleChangeValue({row: x, column: y, value: ev.target.value})}\r\n              />\r\n              )\r\n            })}\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n  </MatrizContainer>\r\n  <ButtonContainer className='mt-3'>\r\n    <Button color=\"secondary\" onClick={Controller.restart}>\r\n        Nuevo\r\n    </Button>\r\n  </ButtonContainer>\r\n  </>\r\n  )\r\n}","import React from 'react'\r\nimport { MainContainer,StepContainer } from './Filtro.style'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Steps from './Steps'\r\nimport Step1 from './Step1'\r\nimport Step2 from './Step2'\r\nimport Step3 from './Step3'\r\nimport { redity } from './instances'\r\nimport FiltroController from './Controller/Filtro.controller'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nexport default React.memo(redity.connect(FiltroController.KEY)(() => {\r\n    const Controller = FiltroController\r\n    return(\r\n    <MainContainer>\r\n      <Steps/>\r\n      <br/>\r\n      <Paper >\r\n        <StepContainer>\r\n          { (Controller.step===0 || Controller.step===1) && <Step1/> }\r\n          { Controller.step===2 && <Step2/> }\r\n          { Controller.step===3 && <Step3/> }\r\n        </StepContainer>\r\n      </Paper>\r\n      <Snackbar\r\n        anchorOrigin={{vertical: 'bottom', horizontal: 'center' }}\r\n        open={Controller.message_open}\r\n        autoHideDuration={6000}\r\n        onClose={()=>Controller.handleCloseMessage(false)}\r\n        >\r\n        <Alert severity={Controller.message.type} onClose={()=>Controller.handleCloseMessage(false)} >\r\n          {Controller.message.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </MainContainer>\r\n  )\r\n}))\r\n"],"sourceRoot":""}